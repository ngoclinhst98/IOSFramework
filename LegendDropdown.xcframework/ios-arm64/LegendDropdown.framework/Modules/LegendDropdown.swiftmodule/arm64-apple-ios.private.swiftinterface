// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name LegendDropdown
import Combine
import Foundation
@_exported import LegendDropdown
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct LegendDropdownModel {
  public var key: Swift.String
  public var value: Swift.String
  public var tag: Swift.String
  public init(key: Swift.String, value: Swift.String, tag: Swift.String = "")
}
@_hasMissingDesignatedInitializers public class BundleManager {
  public func loadLegendDropdownUIView(legendDropdownUIView: LegendDropdown.LegendDropdownUIView)
  public func loadLegendDropdownUICell(table: UIKit.UITableView)
  @objc deinit
}
extension UIKit.UITextView {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var contentSize: CoreFoundation.CGSize {
    @objc get
    @objc set
  }
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class LegendDropdownUIView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) public var selectedDropdownData: LegendDropdown.LegendDropdownModel?
  @_Concurrency.MainActor(unsafe) public var onSelected: ((LegendDropdown.LegendDropdownModel?) -> Swift.Void)?
  @_Concurrency.MainActor(unsafe) public var callbackEmptyAlert: (() -> Swift.Void)?
  @_Concurrency.MainActor(unsafe) public var isFlexible: Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc override dynamic public var intrinsicContentSize: CoreFoundation.CGSize {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func layoutSubviews()
  @_Concurrency.MainActor(unsafe) public func setupLegendDropdown(title: Foundation.NSMutableAttributedString, dropdownData: [LegendDropdown.LegendDropdownModel], selectedDropdownData: LegendDropdown.LegendDropdownModel? = nil, backgroundColor: UIKit.UIColor? = nil, isFlexible: Swift.Bool = false, height: CoreFoundation.CGFloat? = nil, callbackWhenEmpty: (() -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) public func setAlert(text: Swift.String)
  @objc deinit
}
extension LegendDropdown.LegendDropdownUIView : UIKit.UITableViewDelegate, UIKit.UITableViewDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
}
extension LegendDropdown.LegendDropdownUIView : UIKit.UITextViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textView(_ textView: UIKit.UITextView, shouldChangeTextIn range: Foundation.NSRange, replacementText text: Swift.String) -> Swift.Bool
}
public struct LegendDropdownField : SwiftUI.View {
  public var title: Foundation.NSMutableAttributedString
  public var size: CoreFoundation.CGSize
  public var dropdownData: [LegendDropdown.LegendDropdownModel]
  @SwiftUI.Binding @_projectedValueProperty($selectedDropdownData) public var selectedDropdownData: LegendDropdown.LegendDropdownModel {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  public var $selectedDropdownData: SwiftUI.Binding<LegendDropdown.LegendDropdownModel> {
    get
  }
  public var backgroundColor: UIKit.UIColor?
  public var isFlexible: Swift.Bool
  @SwiftUI.Binding @_projectedValueProperty($alertText) public var alertText: Swift.String {
    get
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating set
    @available(iOS 13.0, tvOS 13.0, watchOS 6.0, macOS 10.15, *)
    nonmutating _modify
  }
  public var $alertText: SwiftUI.Binding<Swift.String> {
    get
  }
  public var callbackWhenEmpty: (() -> Swift.Void)?
  public init(title: Foundation.NSMutableAttributedString, size: CoreFoundation.CGSize, dropdownData: [LegendDropdown.LegendDropdownModel], selectedDropdownData: SwiftUI.Binding<LegendDropdown.LegendDropdownModel>, backgroundColor: UIKit.UIColor? = nil, isFlexible: Swift.Bool = false, alertText: SwiftUI.Binding<Swift.String> = Binding.constant(""), callbackWhenEmpty: (() -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s14LegendDropdown0aB5FieldV4bodyQrvp", 0) __
}
